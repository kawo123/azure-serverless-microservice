{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "baseName": {
      "type": "string",
      "maxLength": 10,
      "minLength": 3,
      "metadata": {
        "description": "The base name to use as prefix to create all the resources."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Specifies the location for all resources."
      }
    },
    "runtime": {
      "type": "string",
      "defaultValue": "python",
      "allowedValues": ["dotnet", "node", "java", "powershell", "python"],
      "metadata": {
        "description": "The language worker runtime to load in the function app."
      }
    },
    "eventHubConnectionString": {
      "type": "securestring",
      "metadata": {
        "description": "Connection string for Azure Event Hub namespace (reader permission required)."
      }
    },
    "cosmosDbConnectionString": {
      "type": "securestring",
      "metadata": {
        "description": "Connection string for Azure Cosmos DB account."
      }
    }
  },
  "variables": {
    "storageAccountName": "[concat(toLower(replace(parameters('baseName'),'-', '')), 'funcsa')]",
    "storageAccountType": "Standard_LRS",
    "storageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
    "hostingPlanName": "[concat(parameters('baseName'),'-asp')]",
    "applicationInsightsName": "[concat(parameters('baseName'),'-func-appinsight')]",
    "functionAppName": "[concat(parameters('baseName'),'-func')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2019-04-01",
      "location": "[parameters('location')]",
      "kind": "StorageV2",
      "sku": {
        "name": "[variables('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2019-08-01",
      "name": "[variables('hostingPlanName')]",
      "location": "[parameters('location')]",
      "kind": "linux",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      },
      "properties": {
        "name": "[variables('hostingPlanName')]",
        "computeMode": "Dynamic",
        "reserved": false
      }
    },
    {
      "apiVersion": "2015-05-01",
      "name": "[variables('applicationInsightsName')]",
      "type": "Microsoft.Insights/components",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Request_Source": "rest"
      }
    },
    {
      "apiVersion": "2019-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp,linux",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "EventHubReaderConnection",
              "value": "[parameters('eventHubConnectionString')]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~3"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('microsoft.insights/components/', variables('applicationInsightsName')), '2015-05-01').InstrumentationKey]"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "python"
            }
          ],
          "connectionStrings": [
            {
              "name": "CosmosDBConnection",
              "connectionString": "[parameters('cosmosDbConnectionString')]",
              "type": "DocDb"
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "FunctionAppName": {
      "type": "string",
      "value": "[variables('functionAppName')]"
    }
  }
}